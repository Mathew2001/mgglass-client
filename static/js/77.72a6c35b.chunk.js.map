{"version":3,"file":"static/js/77.72a6c35b.chunk.js","mappings":"uNAQA,MAqGA,EArGqBA,KACnB,MAAM,KAAEC,IAASC,EAAAA,EAAAA,MACX,UAAEC,EAAS,QAAEC,EAASC,MAAOC,IAAmBC,EAAAA,EAAAA,IAAYC,GAASA,EAAMC,mBAC3E,aAAEC,EAAcN,QAASO,EAAoBN,MAAOO,IAAsBL,EAAAA,EAAAA,IAAYC,GAASA,EAAMK,qBACrGC,GAAWC,EAAAA,EAAAA,OACVC,EAAmBC,IAAwBC,EAAAA,EAAAA,UAAS,GAc3D,OAXAC,EAAAA,EAAAA,WAAU,KACJlB,GACJa,GAASM,EAAAA,EAAAA,IAAkBnB,KACzB,CAACa,EAAUb,KAEfkB,EAAAA,EAAAA,WAAU,KACI,OAAThB,QAAS,IAATA,GAAAA,EAAWkB,KACZP,GAASQ,EAAAA,EAAAA,IAA4B,OAATnB,QAAS,IAATA,OAAS,EAATA,EAAWoB,kBAExC,CAACT,EAAmB,OAATX,QAAS,IAATA,OAAS,EAATA,EAAWkB,MAEtBjB,GAAWO,GACLa,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UACpCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAC,qBAKhDpB,GAAkBM,GACZY,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UACpCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAC,mBAM/CvB,GAAcO,GAUhBiB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAW,OAATvB,QAAS,IAATA,OAAS,EAATA,EAAWF,YAG3DuB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACC,WAAU,8FAAAC,OAA0BpB,EAAaT,KAAI,OAAA6B,OAAM3B,EAAUF,MAAQ8B,SAAU,CAAE,wCAAWC,EAAAA,EAAOC,KAAM,mDAAYD,EAAAA,EAAOE,WAAY,CAACxB,EAAaT,MAAM,GAAF6B,OAAME,EAAAA,EAAOE,WAAU,KAAAJ,OAAIpB,EAAaT,MAAQ,CAACE,EAAUF,MAAM,GAAF6B,OAAME,EAAAA,EAAOE,WAAU,KAAAJ,OAAIpB,EAAaT,KAAI,KAAA6B,OAAI3B,EAAUF,YAExSuB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kCAAiCC,UAC9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAA,OACEW,IAAc,OAAThC,QAAS,IAATA,OAAS,EAATA,EAAWiC,aAAapB,GAC7BqB,IAAc,OAATlC,QAAS,IAATA,OAAS,EAATA,EAAWF,KAChBwB,UAAU,2BACVa,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASC,UAAW,YAE5C,OAATtC,QAAS,IAATA,OAAS,EAATA,EAAWiC,aAAaM,QAAS,IAChCf,EAAAA,EAAAA,MAAAgB,EAAAA,SAAA,CAAAjB,SAAA,EACEF,EAAAA,EAAAA,KAAA,UACEC,UAAU,sFACVmB,QAASA,IAAM3B,EAAsB4B,GACnCA,KAAuB,OAAT1C,QAAS,IAATA,OAAS,EAATA,EAAWiC,aAAaM,QAAS,EAAI,EAAIG,EAAY,GAErEP,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASd,UAEzCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2BAEfD,EAAAA,EAAAA,KAAA,UACEC,UAAU,wFACVmB,QAASA,IAAM3B,EAAsB4B,GACrB,IAAdA,GAA2B,OAAT1C,QAAS,IAATA,OAAS,EAATA,EAAWiC,aAAaM,QAAS,EAAIG,EAAY,GAErEP,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAASd,UAEzCF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,oCAQzBD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6BAA4BC,UACzCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,WAAUC,UACvBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mBAAkBC,SAAW,OAATvB,QAAS,IAATA,OAAS,EAATA,EAAW2C,sBAvD3CtB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,UACpCF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,MAAKC,UAClBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,SAAQC,UACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,6BAA4BC,SAAC,2B,uDCDrD,QAvCA,SAAkBqB,GAKd,IALe,WACjBlB,EAAU,SACVE,EAAW,CAAC,EAAC,UACbiB,EAAY,MAAK,UACjBC,EAAY,IACbF,EAEC,MAAMG,EAAQC,OAAOtB,GAAc,IAChCuB,MAAM,KACNC,IAAIC,GAAKA,EAAEC,QACXC,OAAOC,SAEV,OACEjC,EAAAA,EAAAA,KAAA,OAAKC,UAAS,mCAAAK,OAAqCmB,GAAYvB,UAC7DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,kBAAiBC,SAC3BwB,EAAMG,IAAI,CAACK,EAAOC,KACjB,MAAMC,EAASD,IAAQT,EAAMR,OAAS,EAChCmB,EAAK9B,EAAS2B,GACpB,OACElC,EAAAA,EAAAA,KAAAmB,EAAAA,SAAA,CAAAjB,UACAC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CACGkC,IAAWC,GAEVrC,EAAAA,EAAAA,KAAA,QAAMC,UAAU,uBAAsBC,SAAEgC,KAExClC,EAAAA,EAAAA,KAACsC,EAAAA,GAAI,CAACD,GAAIA,EAAIpC,UAAU,kCAAiCC,SACtDgC,KAGHE,IAAUpC,EAAAA,EAAAA,KAAA,QAAAE,SAAOsB,MATVW,UAiBvB,C","sources":["components/meklahon/MeklahonView.jsx","components/LinkPaths.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getMeklahonByName } from '../../redux/actions/mecklahons/mecklahonActions'\r\nimport { getMeklahonCatById } from '../../redux/actions/mecklahons/mecklahonCatActions'\r\nimport LinkPaths from '../LinkPaths'\r\nimport ROUTES from '../../const'\r\n\r\nconst MeklahonView = () => {\r\n  const { name } = useParams()\r\n  const { mecklahon, loading ,error: mecklahonError } = useSelector(state => state.mecklahonReducer)\r\n  const { mecklahonCat, loading: mecklahonCatLoading,error: mecklahonCatError } = useSelector(state => state.mecklahonCatReducer)\r\n  const dispatch = useDispatch()\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0)\r\n\r\n\r\n  useEffect(() => {\r\n    if(!name) return;\r\n    dispatch(getMeklahonByName(name))\r\n   }, [dispatch, name])\r\n\r\n  useEffect(() => {\r\n    if(mecklahon?._id){\r\n      dispatch(getMeklahonCatById(mecklahon?.mecklahonCatId))\r\n    }\r\n  }, [dispatch, mecklahon?._id])\r\n\r\n  if(loading || mecklahonCatLoading){\r\n    return <div className=\"container py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"display-4 text-center mb-5\">Loading...</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n  if(mecklahonError || mecklahonCatError){\r\n    return <div className=\"container py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"display-4 text-center mb-5\">Error...</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n\r\n  if(!mecklahon || !mecklahonCat){\r\n    return <div className=\"container py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"display-4 text-center mb-5\">No data found...</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  }\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h1 className=\"display-4 text-center mb-5\">{mecklahon?.name}</h1>\r\n        </div>\r\n      </div>\r\n      <div className=\"col-12\">\r\n        <LinkPaths pathString={`דף הבית / מקלחונים / ${mecklahonCat.name} / ${mecklahon.name}`} routeMap={{ \"דף הבית\": ROUTES.HOME, \"מקלחונים\": ROUTES.MECKLAHONS, [mecklahonCat.name]: `${ROUTES.MECKLAHONS}/${mecklahonCat.name}`, [mecklahon.name]: `${ROUTES.MECKLAHONS}/${mecklahonCat.name}/${mecklahon.name}`}} />\r\n      </div>\r\n      <div className=\"row justify-content-center mb-5\">\r\n        <div className=\"col-md-8\">\r\n          <div className=\"position-relative\">\r\n            <img\r\n              src={mecklahon?.imageGallery[currentImageIndex]}\r\n              alt={mecklahon?.name}\r\n              className=\"img-fluid rounded shadow\"\r\n              style={{ width: '100%', height: '500px', objectFit: 'cover' }}\r\n            />\r\n            {mecklahon?.imageGallery.length > 1 && (\r\n              <>\r\n                <button\r\n                  className=\"btn btn-light rounded-circle position-absolute top-50 end-0 translate-middle-y me-3\"\r\n                  onClick={() => setCurrentImageIndex((prevIndex) =>\r\n                    prevIndex === mecklahon?.imageGallery.length - 1 ? 0 : prevIndex + 1\r\n                  )}\r\n                  style={{ width: '45px', height: '45px' }}\r\n                >\r\n                  <i className=\"bi bi-chevron-right\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-light rounded-circle position-absolute top-50 start-0 translate-middle-y ms-3\"\r\n                  onClick={() => setCurrentImageIndex((prevIndex) =>\r\n                    prevIndex === 0 ? mecklahon?.imageGallery.length - 1 : prevIndex - 1\r\n                  )}\r\n                  style={{ width: '45px', height: '45px' }}\r\n                >\r\n                  <i className=\"bi bi-chevron-left\"></i>\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-8\">\r\n          <p className=\"lead text-center\">{mecklahon?.description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MeklahonView","// Breadcrumbs.jsx\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Props:\r\n * - pathString: a string like \"דף הבית / פרגולות / הצללה\"\r\n * - routeMap: { [label]: path } e.g. { \"דף הבית\": ROUTES.HOME, \"פרגולות\": \"/pergolas\" }\r\n * - separator: what to display between items (default \" / \")\r\n * - wrapClass: extra classes for the outer div (Bootstrap-friendly)\r\n */\r\nfunction LinkPaths({\r\n  pathString,\r\n  routeMap = {},\r\n  separator = \" / \",\r\n  wrapClass = \"\"\r\n}) {\r\n  // Split by \"/\" (not spaces), trim, and remove empties\r\n  const parts = String(pathString || \"\")\r\n    .split(\"/\")\r\n    .map(s => s.trim())\r\n    .filter(Boolean);\r\n\r\n  return (\r\n    <div className={`col-12 text-center text-warning ${wrapClass}`}>\r\n      <p className=\"text-center m-0\">\r\n        {parts.map((label, idx) => {\r\n          const isLast = idx === parts.length - 1;\r\n          const to = routeMap[label]; // optional mapping label -> route\r\n          return (\r\n            <>\r\n            <span key={idx}>\r\n              {isLast || !to ? (\r\n                // last item (active) or no route -> plain bold text\r\n                <span className=\"text-warning fw-bold\">{label}</span>\r\n              ) : (\r\n                <Link to={to} className=\"text-muted text-decoration-none\">\r\n                  {label}\r\n                </Link>\r\n              )}\r\n              {!isLast && <span>{separator}</span>}\r\n            </span>\r\n            </>\r\n          );\r\n        })}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkPaths"],"names":["MeklahonView","name","useParams","mecklahon","loading","error","mecklahonError","useSelector","state","mecklahonReducer","mecklahonCat","mecklahonCatLoading","mecklahonCatError","mecklahonCatReducer","dispatch","useDispatch","currentImageIndex","setCurrentImageIndex","useState","useEffect","getMeklahonByName","_id","getMeklahonCatById","mecklahonCatId","_jsx","className","children","_jsxs","LinkPaths","pathString","concat","routeMap","ROUTES","HOME","MECKLAHONS","src","imageGallery","alt","style","width","height","objectFit","length","_Fragment","onClick","prevIndex","description","_ref","separator","wrapClass","parts","String","split","map","s","trim","filter","Boolean","label","idx","isLast","to","Link"],"sourceRoot":""}