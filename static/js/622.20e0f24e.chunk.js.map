{"version":3,"file":"static/js/622.20e0f24e.chunk.js","mappings":"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","sources":["components/ContactUs.jsx","hooks/useContactUs.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { useContactUs } from '../hooks/useContactUs'\r\n\r\nconst ContactUs = () => {\r\n  const { onSubmit, errors } = useContactUs()\r\n  const [formErrors, setFormErrors] = useState({})\r\n  const [name, setName] = useState('')\r\n  const [phone, setPhone] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [message, setMessage] = useState('')\r\n  const [status, setStatus] = useState('pending')\r\n  const MAX_MESSAGE_LENGTH = 150\r\n\r\n  const validatePhoneNumber = (phone) => {\r\n    const phoneRegex = /^[0-9]{9,10}$/\r\n    return phoneRegex.test(phone.replace(/[-\\s]/g, ''))\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault()\r\n    const validationErrors = validateForm()\r\n    if (Object.keys(validationErrors).length === 0) {\r\n      onSubmit({ name: name, phone: phone, email: email, message: message, status: status })\r\n      setName('')\r\n      setPhone('')\r\n      setEmail('')\r\n      setMessage('')\r\n      setStatus('pending')\r\n      setFormErrors({})\r\n    } else {\r\n      setFormErrors(validationErrors)\r\n    }\r\n  }\r\n  const validateForm = () => {\r\n    const errors = {}\r\n    if (!name.trim()) {\r\n      errors.name = 'נא להזין שם מלא'\r\n    }\r\n    if (!phone.trim()) {\r\n      errors.phone = 'נא להזין מספר טלפון'\r\n    } else if (!validatePhoneNumber(phone)) {\r\n      errors.phone = 'נא להזין מספר טלפון תקין'\r\n    }\r\n    if (!email.trim()) {\r\n      errors.email = 'נא להזין כתובת דוא\\\"ל'\r\n    }\r\n    if (!message.trim()) {\r\n      errors.message = 'נא להזין הודעה'\r\n    }\r\n    if (message.length > MAX_MESSAGE_LENGTH) {\r\n      errors.message = `ההודעה חייבת להיות קצרה מ-${MAX_MESSAGE_LENGTH} תווים`\r\n    }\r\n    return errors\r\n  }\r\n  return (\r\n    <div className=\"container pt-5 mt-5\">\r\n      <h2 className=\"text-center mb-4\">צור קשר</h2>\r\n\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6\">\r\n          <form onSubmit={handleFormSubmit} className=\"p-4 border rounded shadow-sm\" style={{ direction: 'rtl' }}>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"name\" className=\"form-label\">שם מלא</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"name\"\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n              />\r\n              {errors.name || formErrors.name && <small className=\"text-danger\">{errors.name?.message || formErrors.name}</small>}\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"phone\" className=\"form-label\">מספר טלפון</label>\r\n              <input\r\n                type=\"tel\"\r\n                className=\"form-control\"\r\n                id=\"phone\"\r\n                value={phone}\r\n                onChange={(e) => setPhone(e.target.value)}\r\n              />\r\n              {errors.phone || formErrors.phone && <small className=\"text-danger\">{errors.phone?.message || formErrors.phone}</small>}\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"email\" className=\"form-label\">דוא\"ל</label>\r\n              <input\r\n                type=\"email\"\r\n                className=\"form-control\"\r\n                id=\"email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              {errors.email || formErrors.email && <small className=\"text-danger\">{errors.email?.message || formErrors.email}</small>}\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"message\" className=\"form-label\">הודעה</label>\r\n              <textarea\r\n                className=\"form-control\"\r\n                id=\"message\"\r\n                rows=\"4\"\r\n                value={message}\r\n                maxLength={MAX_MESSAGE_LENGTH}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n              ></textarea>\r\n              <small className=\"text-muted\">{message.length}/{MAX_MESSAGE_LENGTH}</small>\r\n              {errors.message || formErrors.message && <small className=\"text-danger d-block\">{errors.message?.message || formErrors.message}</small>}\r\n            </div>\r\n\r\n            <button type=\"submit\" className=\"btn btn-primary w-100\">שלח הודעה</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactUs","import { useDispatch } from \"react-redux\";\r\nimport { createContactUs } from \"../redux/actions/contactUsActions\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport const useContactUs = () => {\r\n  const dispatch = useDispatch()\r\n  const {\r\n    handleSubmit,\r\n    register,\r\n    formState: { errors },\r\n    reset,\r\n  } = useForm()\r\n  \r\n  const onSubmit = ({name, phone, email, message,status}) => {\r\n    dispatch(createContactUs({name, phone, email, message,status}))\r\n    reset()\r\n  }\r\n  return {\r\n    handleSubmit,\r\n    register,\r\n    errors,\r\n    onSubmit,\r\n    reset,\r\n  }\r\n}"],"names":["ContactUs","_errors$name","_errors$phone","_errors$email","_errors$message","onSubmit","errors","useContactUs","dispatch","useDispatch","handleSubmit","register","formState","reset","useForm","_ref","name","phone","email","message","status","createContactUs","formErrors","setFormErrors","useState","setName","setPhone","setEmail","setMessage","setStatus","MAX_MESSAGE_LENGTH","validateForm","trim","test","replace","validatePhoneNumber","length","concat","_jsxs","className","children","_jsx","e","preventDefault","validationErrors","Object","keys","style","direction","htmlFor","type","id","value","onChange","target","rows","maxLength"],"sourceRoot":""}