{"version":3,"file":"static/js/868.6b7116e1.chunk.js","mappings":"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","sources":["components/pergolot/PergolaCard.jsx","components/LinkPaths.jsx","components/pergolot/Pergolot.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport LinkPaths from '../LinkPaths'\r\nimport ROUTES from '../../const'\r\n\r\nconst PergolaCard = ({ name, description, imageGallery, id, link }) => {\r\n  const [currentImageIndex, setCurrentImageIndex] = useState(0)\r\n\r\n  const nextImage = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setCurrentImageIndex((prevIndex) =>\r\n      prevIndex === imageGallery.length - 1 ? 0 : prevIndex + 1\r\n    )\r\n  }\r\n\r\n  const previousImage = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    setCurrentImageIndex((prevIndex) =>\r\n      prevIndex === 0 ? imageGallery.length - 1 : prevIndex - 1\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"col\">\r\n      <div className=\"card h-100\">\r\n        <Link key={id} to={link} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n          <div className=\"card-body\">\r\n            <h1 className=\"card-title h4 mb-3\">{name}</h1>\r\n          </div>\r\n          <div id=\"carouselExample\" className=\"carousel slide\">\r\n            <div className=\"carousel-inner\">\r\n              {imageGallery.map((image, index) => (\r\n                <div key={index} className={`carousel-item ${index === currentImageIndex ? 'active' : ''}`}>\r\n                  <img src={image} className=\"d-block w-100\" alt={name} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            {imageGallery.length > 1 && (\r\n              <>\r\n                <button className=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"prev\" onClick={previousImage}>\r\n                  <i className=\"bi bi-arrow-left-circle-fill fs-3 text-dark\"></i>\r\n                  <span className=\"visually-hidden\">Previous</span>\r\n                </button>\r\n                <button className=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExample\" data-bs-slide=\"next\" onClick={nextImage}>\r\n                  <i className=\"bi bi-arrow-right-circle-fill fs-3 text-dark\"></i>\r\n                  <span className=\"visually-hidden\">Next</span>\r\n                </button>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"card-body\">\r\n            <p className=\"card-text text-muted mb-0\" style={{ fontSize: '1.1rem' }}>{description}</p>\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default PergolaCard","// Breadcrumbs.jsx\r\nimport { Link } from \"react-router-dom\";\r\n\r\n/**\r\n * Props:\r\n * - pathString: a string like \"דף הבית / פרגולות / הצללה\"\r\n * - routeMap: { [label]: path } e.g. { \"דף הבית\": ROUTES.HOME, \"פרגולות\": \"/pergolas\" }\r\n * - separator: what to display between items (default \" / \")\r\n * - wrapClass: extra classes for the outer div (Bootstrap-friendly)\r\n */\r\nfunction LinkPaths({\r\n  pathString,\r\n  routeMap = {},\r\n  separator = \" / \",\r\n  wrapClass = \"\"\r\n}) {\r\n  // Split by \"/\" (not spaces), trim, and remove empties\r\n  const parts = String(pathString || \"\")\r\n    .split(\"/\")\r\n    .map(s => s.trim())\r\n    .filter(Boolean);\r\n\r\n  return (\r\n    <div className={`col-12 text-center text-warning ${wrapClass}`}>\r\n      <p className=\"text-center m-0\">\r\n        {parts.map((label, idx) => {\r\n          const isLast = idx === parts.length - 1;\r\n          const to = routeMap[label]; // optional mapping label -> route\r\n          return (\r\n            <>\r\n            <span key={idx}>\r\n              {isLast || !to ? (\r\n                // last item (active) or no route -> plain bold text\r\n                <span className=\"text-warning fw-bold\">{label}</span>\r\n              ) : (\r\n                <Link to={to} className=\"text-muted text-decoration-none\">\r\n                  {label}\r\n                </Link>\r\n              )}\r\n              {!isLast && <span>{separator}</span>}\r\n            </span>\r\n            </>\r\n          );\r\n        })}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LinkPaths","import React, { useEffect } from 'react'\r\nimport PergolaCard from './PergolaCard'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getAllPergolaCat } from '../../redux/actions/pergolas/pergolaCatActions'\r\nimport ROUTES from '../../const'\r\nimport { Link } from 'react-router-dom'\r\nimport LinkPaths from '../LinkPaths'\r\n\r\nconst Pergolot = () => {\r\n  const dispatch = useDispatch()\r\n  const { pergolaCats } = useSelector(state => state.pergolaCatReducer)\r\n  useEffect(() => {\r\n    dispatch(getAllPergolaCat())\r\n  }, [dispatch])\r\n  return (\r\n    <>  \r\n    <div className=\"container py-4 mt-4\" dir=\"rtl\">\r\n      <div className=\"mt-4 mb-4\">\r\n        <h1 className=\"text-center\">פרגולות</h1>\r\n        <LinkPaths pathString=\"דף הבית / פרגולות\" routeMap={{ \"דף הבית\": ROUTES.HOME, \"פרגולות\": ROUTES.PROGLOT}} />\r\n      </div>\r\n      <div className='row row-cols-2 row-cols-lg-4 g-4'>\r\n        {pergolaCats && pergolaCats.map((pergola) => (\r\n          <PergolaCard key={pergola._id} name={pergola.name} description={pergola.description} imageGallery={pergola.imageGallery} id={pergola._id} link={`${ROUTES.PROGLOT}/${pergola.name}`} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Pergolot"],"names":["_ref","name","description","imageGallery","id","link","currentImageIndex","setCurrentImageIndex","useState","_jsx","className","children","_jsxs","Link","to","style","textDecoration","color","map","image","index","concat","src","alt","length","_Fragment","type","onClick","e","preventDefault","stopPropagation","prevIndex","fontSize","pathString","routeMap","separator","wrapClass","parts","String","split","s","trim","filter","Boolean","label","idx","isLast","Pergolot","dispatch","useDispatch","pergolaCats","useSelector","state","pergolaCatReducer","useEffect","getAllPergolaCat","dir","LinkPaths","ROUTES","HOME","PROGLOT","pergola","PergolaCard","_id"],"sourceRoot":""}